{"version":3,"sources":["Components/createContext.tsx","Components/SelectBar.tsx","Components/QuizzForm.tsx","Components/quizzPage.tsx","firebase.js","App.tsx","reportWebVitals.ts","index.tsx","swDev.js"],"names":["QuizzLevel","createContext","value","dummy","question","answer","option","QuizzData","quizzScoreContext","quizzScoreProvider","Selectbar","navigate","useNavigate","context","useContext","className","htmlFor","onChange","e","target","id","style","display","justifyContent","type","onClick","MainPage","Quizzform","React","useState","selectedValue","setSelectedValue","questionIncrement","setquestionIncrement","dataContextPack","quizzScoreSetter","quizzScoreState","setquizzScoreState","arrayIncrement","handleChange","event","undefined","length","flexDirection","Radio","checked","name","color","Button","backgroundColor","marginLeft","textAlign","MainQUizz","Scorecontext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","messaging","requestPermission","then","getToken","token","console","log","qizzLevelState","quizzScore","QuizzMaterial","useEffect","Calling","level","a","shuffleArray","array","sort","Math","random","api","fetch","json","results","map","quizz","ind","correct_answer","incorrect_answers","quizzData","Provider","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","swUrl","process","navigator","serviceWorker","register","reponse","swDev"],"mappings":"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","file":"static/js/main.57578f54.chunk.js","sourcesContent":["import  {createContext} from 'react';\n\n\n\nexport  let QuizzLevel = createContext((value: String)=>{ });\ntype quizzfilterData={\n    question:String\n    answer:String\n    option:String[]\n  }\n  let dummy:quizzfilterData[]=[\n    {question: \"What is the most common surname Wales?\", answer: \"Jones\", option: ['4',\"5\"]}\n\n  ]\nexport let QuizzData=createContext<quizzfilterData[]>(dummy);\nexport let quizzScoreContext=createContext((value:number)=>{});\nexport let quizzScoreProvider=createContext(0);","import React, {useContext }  from 'react';\nimport './SearchBar.css';\nimport {QuizzLevel} from './createContext';\nimport { useNavigate } from \"react-router-dom\";\nfunction Selectbar() {\n     \n  let navigate = useNavigate();\n      const context = useContext(QuizzLevel)\n     let quizLevelSelectionftn=(e:React.ChangeEvent<{value:string}>)=>{\n            context(e.target.value); \n     }\n  return (\n    <>\n    \n    <div className=\"searchBar\">\n    <div className=\"form-group searchInside \">\n    <label htmlFor=\"exampleFormControlSelect1\" className=\"selectionCaption\">Example select</label>\n    <select className=\"form-control\" \n      onChange={quizLevelSelectionftn}\n    id=\"exampleFormControlSelect1\">\n      \n      <option value=\"easy\" >Easy</option>\n      <option value=\"medium\">Medium</option>\n      <option value=\"hard\">Hard</option>\n      \n    </select>\n      \n  </div>\n\n  \n  </div>\n  <div style={{display:\"flex\",justifyContent:\"center\"}}>\n  <button type=\"button\"  onClick={()=>{navigate(\"/Quizz\")}} className=\"btn tryQuizzBtn\">Try Quizz</button>\n  </div>\n  </>\n  );\n}\n\n\nexport default function MainPage(){\n  return(\n    <>\n    <div className=\"App\">\n       <h4 className=\"quizQuote\">Knowledge does not consist in narrating much. Knowledge is but a light which Allah places in the heart.</h4>\n       <div className='QuizzApp'><h1>Quiz App</h1></div>\n         <Selectbar/>\n        \n \n      \n    </div>\n    </>\n\n  );\n}","import React,{useContext,useState} from 'react';\n\n\nimport Radio from '@material-ui/core/Radio';\nimport {QuizzData,quizzScoreContext} from './createContext';\nimport \"./QuizzQuestion.css\"\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport default function Quizzform() {\n  let validate=()=>{\n    if(selectedValue===dataContextPack[arrayIncrement[0]].answer){\n      setquizzScoreState(++quizzScoreState);\n     \n      quizzScoreSetter(quizzScoreState);\n      \n    }\n    else{\n      setquizzScoreState(quizzScoreState);\n      quizzScoreSetter(quizzScoreState);\n    }\n   \n    setquestionIncrement(++questionIncrement);\n                           arrayIncrement[1](++arrayIncrement[0]);\n  }\n   let [selectedValue, setSelectedValue] = React.useState(\"\");\n   let [questionIncrement, setquestionIncrement] = useState<number>(0)\n   let dataContextPack = useContext(QuizzData);\n  \n    let quizzScoreSetter=useContext(quizzScoreContext);\n    let [quizzScoreState, setquizzScoreState] = useState<number>(0);\n     \n          let arrayIncrement=useState(0)\n      let handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value);\n      \n\n      \n  };\n    \n  if(questionIncrement<10 && dataContextPack!==undefined){   \n  return (\n        \n    <div>\n        <h1>{dataContextPack[questionIncrement].question.length===0? \"\":dataContextPack[questionIncrement].question }</h1>\n        <div className=\"radioDisplay\">\n            <div style={{display:\"flex\",flexDirection:\"column\"}}>\n\n          <div>        \n          <label htmlFor=\"btn0\">\n      <Radio\n        checked={selectedValue === dataContextPack[questionIncrement].option[0]}\n        onChange={handleChange}\n        value={dataContextPack[questionIncrement].option[0]}\n         id=\"btn0\"\n        name=\"radio-button-demo\"\n      /> {dataContextPack[questionIncrement].option[0]}\n      </label>\n      </div>\n      <div>\n        <label htmlFor=\"btn3\">\n      <Radio\n        checked={selectedValue === dataContextPack[questionIncrement].option[1]}\n        onChange={handleChange}\n        value={dataContextPack[questionIncrement].option[1]}\n         id=\"btn3\"\n        name=\"radio-button-demo\"\n      /> {dataContextPack[questionIncrement].option[1]}\n      </label>\n      </div>\n\n      </div>\n         <div style={{display:\"flex\",flexDirection:\"column\"}}>\n             <div>\n       <label htmlFor=\"usr\"> \n      <Radio\n        checked={selectedValue === dataContextPack[questionIncrement].option[2]}\n        onChange={handleChange}\n        value={dataContextPack[questionIncrement].option[2]}\n        color=\"default\"\n        id=\"usr\"\n        name=\"radio-button-demo\"\n        />{dataContextPack[questionIncrement].option[2]}\n      </label>\n      </div>\n      <div>\n      <label htmlFor=\"btn4\">   \n          <Radio\n        checked={selectedValue === dataContextPack[questionIncrement].option[3]}\n        onChange={handleChange}\n        value={dataContextPack[questionIncrement].option[3]}\n        color=\"default\"\n        id=\"btn4\"\n        name=\"radio-button-demo\"\n      />{dataContextPack[questionIncrement].option[3]}\n      </label>\n      </div>\n      </div>\n\n      </div>\n      <Button  style={{backgroundColor:\" #02C873\",color:\"white\" , marginLeft:\"40%\"}} onClick={()=>{\n                    validate();\n       \n      }}>Next</Button>\n    </div>\n  );\n     }\n    \n     else{\n         return(\n             <>\n             <h1 style={{textAlign:\"center\"}}>Try Again</h1>\n             </>\n         )\n     }\n}\n\n","import React,{useContext} from 'react';\nimport './QuizzQuestion.css';\nimport Quizzform from './QuizzForm';\nimport {quizzScoreProvider} from './createContext';\n\nexport default function MainQUizz(){\n  const Scorecontext = useContext(quizzScoreProvider);\n   return(\n       <>\n       <div className=\"MainQuizzContainer\">\n                     <h1 className=\"quizzScore\">Score : {Scorecontext}</h1>\n                     <div className=\"MainquestionContainer\">\n                           <div className=\"QuestionBox\">\n                                  <h2 className=\"questionText\">Question</h2>\n                                    <Quizzform/>\n\n                           </div>\n                     </div>\n       </div>\n       </>\n   );\n}","import firebase from 'firebase';\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBkibsKOn-sfdzfUOkNx5qNsPtxdOnC96U\",\n    authDomain: \"quizz-pwa-app.firebaseapp.com\",\n    projectId: \"quizz-pwa-app\",\n    storageBucket: \"quizz-pwa-app.appspot.com\",\n    messagingSenderId: \"414104402544\",\n    appId: \"1:414104402544:web:22920b465dd53763bf12b5\",\n    measurementId: \"G-0N1QYSWRFS\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  export default firebase;","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport MainPage from './Components/SelectBar';\nimport {\n  \n  Routes,\n  Route\n} from 'react-router-dom';\nimport {QuizzLevel,QuizzData,quizzScoreContext,quizzScoreProvider} from './Components/createContext';\nimport MainQUizz from './Components/quizzPage';\nimport firebase from './firebase';\n\n\nfunction App() {\n  const messaging=firebase.messaging();\n  \n  messaging.requestPermission().then(()=>{\n      return messaging.getToken();\n  }).then((token)=>{\n       console.log(\"token\",token);\n  })\n  type quizzfilterData={\n    question:String\n    answer:String\n    option:String[]\n  }\n  \n  let  qizzLevelState = useState<String>(\"easy\");\n  \n\n  const quizzScore=useState(0);\n  let QuizzMaterial=useState<any>();\n  \n  useEffect(() => {\n  \n    \n    Calling(qizzLevelState[0]);\n  }, [])\n\n  const Calling=async (level:String) => {\n     \n   \n    type Quizz={\n      category: String\n       type: String\n       difficulty: String\n       question:String\n       correct_answer: String\n       incorrect_answers:String[]\n }\n \n\n          \n          const shuffleArray = (array: any[]) => \n           [...array].sort(() => Math.random() - 0.5);\n             let api=fetch(`https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple`);\n             let {results}=await (await api).json();\n             let quizzData:quizzfilterData[]=await results.map((quizz:Quizz,ind:number)=>{\n                     return {\n                      question:quizz.question,\n                      answer:quizz.correct_answer,\n                      option: shuffleArray([\n                       ...quizz.incorrect_answers,\n                       quizz.correct_answer,\n                      ]),\n                     }\n             })\n             \n             QuizzMaterial[1](quizzData);\n             \n          \n   }\n\n\n  \n\n  return (\n    <>\n    <QuizzLevel.Provider value={qizzLevelState[1]}>\n      \n      <QuizzData.Provider value={QuizzMaterial[0]}>\n        <quizzScoreContext.Provider value={quizzScore[1]}>\n          <quizzScoreProvider.Provider value={quizzScore[0]}>\n            \n        <Routes>\n    <Route path=\"/\" element={<MainPage />} />\n    <Route path=\"/Quizz\" element={<MainQUizz/>}/>\n\n    </Routes>\n    </quizzScoreProvider.Provider>\n    </quizzScoreContext.Provider>\n\n    </QuizzData.Provider>\n    </QuizzLevel.Provider>\n  </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n \n} from 'react-router-dom';\nimport swDev from './swDev';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nswDev();","export default function swDev(){\n    let swUrl=`${process.env.PUBLIC_URL}/sw.js`\n    navigator.serviceWorker.register(swUrl).then((reponse)=>{\n        console.log(\"Reponce\",reponse )\n    })\n}"],"sourceRoot":""}